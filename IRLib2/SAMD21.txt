Notes on SAMD 21 Support:
	Beginning with IRLib 2.01 we have added preliminary support for the SAMD21G18A processor or as we will refer to it simply as SAMD 21. This processor is used in the Arduino Zero, Arduino M0, Arduino M0 Pro, and the Adafruit Feather M0 series boards as well as the upcoming Adafruit Circuit Playground Express.
	This support should be considered a very preliminary beta support. To be completely honest we barely understand some of the hardware specific portions of this processor. Most of the code has been adapted from messages on the Arduino.cc support forum and from the code at
	https://github.com/manitou48/ZERO/tree/master/IRtest
	Receiving is supported through all three receiver classes. As you would expect the IRrecvLoop class can be used with any available input pin. The IRrecvPCI and IRfrequency classes can be used on any pin that supports "attachInterrupt()". Specifically that means everything except pin 4 on the Arduino Zero. And everything except pin 2 on the boards from Arduino.org such as the Arduino M0, M0 Pro, and Zero Pro. For details on supported pins see these links:
	https://www.arduino.cc/en/Reference/AttachInterrupt
	http://www.arduino.org/learning/reference/AttachInterrupt
	Note that although we support Arduino.org hardware, you should only use the Arduino.cc IDE for compiling your sketches.
	The IRrecv receiver class using a 50 microsecond timer interrupt is also supported. It uses hardware timer TC3.
	The IRrecv and IRrecvLoop classes should be able to use any available input pin. Note that all of our example sketches used pin 2 for receiver and pin 3 for frequency measurement. However pin 2 is not available for PCI interrupts on the Arduino.org platforms and neither 2 nor 3 are available on the Adafruit Feather M0 platforms. We are recommending using 5 and 6 for receiving and frequency measurement respectively.
	For sending, output is on pin 9 and uses timer TCC1 to set the PWM frequency. It has been tested at frequencies of 36, 38, 39, 40 and 57 which are the frequencies of our supported protocols.
	If anyone who is more knowledgeable about the SAMD 21 platform and can adapt the code other timers or other output pins, pull requests to make this code more flexible are welcome. Please try to maintain the general structure of the code and limit your changes to adding new timers, pin numbers etc. without making other changes to the code.
	As of this release the code has been tested on Arduino Zero, Arduino M0 Pro, and Adafruit Feather M0 BLE version.

